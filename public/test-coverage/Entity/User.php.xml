<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="User.php" path="/Entity">
    <totals>
      <lines total="124" comments="31" code="93" executable="19" executed="19" percent="100.00"/>
      <methods count="14" tested="14" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Entity\User" start="15" executable="19" executed="19" crap="14">
      <package full="" name="" sub="" category=""/>
      <namespace name="App\Entity"/>
      <method name="getId" signature="getId()" start="55" end="58" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getUsername" signature="getUsername()" start="60" end="63" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setUsername" signature="setUsername($username)" start="65" end="68" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getSalt" signature="getSalt()" start="70" end="73" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getPassword" signature="getPassword()" start="75" end="78" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setPassword" signature="setPassword($password)" start="80" end="83" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getPlainPassword" signature="getPlainPassword()" start="85" end="88" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setPlainPassword" signature="setPlainPassword($password)" start="90" end="93" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getEmail" signature="getEmail()" start="95" end="98" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setEmail" signature="setEmail($email)" start="100" end="103" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getRole" signature="getRole()" start="105" end="108" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setRole" signature="setRole($role)" start="110" end="114" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getRoles" signature="getRoles()" start="116" end="119" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="eraseCredentials" signature="eraseCredentials()" start="121" end="123" crap="1" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="57">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="62">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testList"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="67">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="68">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="72">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="77">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="82">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="83">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="87">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="92">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="93">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="97">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="102">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="103">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="107">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="112">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="113">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
        <covered by="App\Tests\Entity\UserTest::testEntity"/>
      </line>
      <line nr="118">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="123">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Entity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ORM</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Mapping</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ORM</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">User</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UserInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Assert</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Bridge</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Validator</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Constraints</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UniqueEntity</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * @ORM\Table("user")</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * @ORM\Entity</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> * @UniqueEntity("email")</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="15">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserInterface</token>
      </line>
      <line no="16">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="integer")</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * @ORM\Id</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * @ORM\GeneratedValue(strategy="AUTO")</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23"/>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=25, unique=true)</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir un nom d'utilisateur.")</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=64)</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank()</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * @Assert\Length(</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     *     max=4096</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     * )</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$plainPassword</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=60, unique=true)</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @Assert\NotBlank(message="Vous devez saisir une adresse email.")</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * @Assert\Email(message="Le format de l'adresse n'est pas correcte.")</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @ORM\Column(type="string", length=255)</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">id</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59"/>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUsername</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">username</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$username</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSalt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="74"/>
      <line no="75">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="79"/>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="84"/>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPlainPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainPassword</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setPlainPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">plainPassword</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">email</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$email</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="104"/>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setRole</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$role</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">role</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$role</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getRoles</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">role</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="120"/>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">eraseCredentials</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="124">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
    </source>
  </file>
</phpunit>
