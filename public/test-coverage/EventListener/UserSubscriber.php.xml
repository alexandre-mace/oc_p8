<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="UserSubscriber.php" path="/EventListener">
    <totals>
      <lines total="51" comments="4" code="47" executable="14" executed="14" percent="100.00"/>
      <methods count="5" tested="5" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\EventListener\UserSubscriber" start="11" executable="14" executed="14" crap="7">
      <package full="" name="" sub="" category=""/>
      <namespace name="App\EventListener"/>
      <method name="__construct" signature="__construct(UserPasswordEncoderInterface $encoder)" start="15" end="18" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="getSubscribedEvents" signature="getSubscribedEvents()" start="20" end="26" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="prePersist" signature="prePersist(LifecycleEventArgs $args)" start="28" end="31" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="preUpdate" signature="preUpdate(LifecycleEventArgs $args)" start="33" end="36" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="encode" signature="encode(LifecycleEventArgs $args)" start="38" end="51" crap="3" executable="7" executed="7" coverage="100"/>
    </class>
    <coverage>
      <line nr="17">
        <covered by="Tests\App\Controller\DefaultControllerTest::testIndex"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testList"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="18">
        <covered by="Tests\App\Controller\DefaultControllerTest::testIndex"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testList"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="23">
        <covered by="Tests\App\Controller\DefaultControllerTest::testIndex"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogout"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testList"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testList"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="30">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="31">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="35">
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="36">
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="40">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="43">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="44">
        <covered by="App\Tests\Controller\TaskControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testEdit"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testToggleTask"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testAnonDelete"/>
        <covered by="App\Tests\Controller\TaskControllerTest::testDeleteException"/>
      </line>
      <line nr="47">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="48">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="49">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
      <line nr="51">
        <covered by="App\Tests\Controller\SecurityControllerTest::testLogin"/>
        <covered by="App\Tests\Controller\UserControllerTest::testCreate"/>
        <covered by="App\Tests\Controller\UserControllerTest::testEdit"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_COMMENT">// src/App/EventListener/UserSubscriber.php</token>
      </line>
      <line no="4">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">EventListener</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="5"/>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Common</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">EventSubscriber</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Symfony</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Component</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Security</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Core</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Encoder</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UserPasswordEncoderInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">App</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Entity</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Doctrine</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Common</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Persistence</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Event</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">LifecycleEventArgs</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UserSubscriber</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventSubscriber</token>
      </line>
      <line no="12">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$encoder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">UserPasswordEncoderInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$encoder</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encoder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$encoder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getSubscribedEvents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'prePersist'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'preUpdate'</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27"/>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">prePersist</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">LifecycleEventArgs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">preUpdate</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">LifecycleEventArgs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="37"/>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">LifecycleEventArgs</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$entity</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$args</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getObject</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41"/>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// upload only works for Trick entities</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$entity</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">User</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$entity</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPlainPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encoder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">encodePassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$entity</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$entity</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPlainPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$entity</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setPassword</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$password</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
